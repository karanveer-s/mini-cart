[{"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\App.js":"1","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\App.test.js":"2","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Button.js":"3","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\Cart.js":"4","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartColumns.js":"5","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartItem.js":"6","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartList.js":"7","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartTotals.js":"8","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\EmptyCart.js":"9","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\Form.js":"10","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Default.js":"11","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Details.js":"12","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Navbar.js":"13","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Product.js":"14","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\ProductList.js":"15","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Title.js":"16","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\context.js":"17","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\data.js":"18","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\index.js":"19","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\reportWebVitals.js":"20","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\setupTests.js":"21"},{"size":876,"mtime":1604987561235,"results":"22","hashOfConfig":"23"},{"size":246,"mtime":1603511370830,"results":"24","hashOfConfig":"23"},{"size":458,"mtime":1604381188850,"results":"25","hashOfConfig":"23"},{"size":1300,"mtime":1604987378244,"results":"26","hashOfConfig":"23"},{"size":1076,"mtime":1604136655187,"results":"27","hashOfConfig":"23"},{"size":1854,"mtime":1604601904160,"results":"28","hashOfConfig":"23"},{"size":382,"mtime":1604140806770,"results":"29","hashOfConfig":"23"},{"size":1883,"mtime":1604987834750,"results":"30","hashOfConfig":"23"},{"size":350,"mtime":1604136840342,"results":"31","hashOfConfig":"23"},{"size":6278,"mtime":1604987651800,"results":"32","hashOfConfig":"23"},{"size":870,"mtime":1605512940339,"results":"33","hashOfConfig":"23"},{"size":3097,"mtime":1604602920154,"results":"34","hashOfConfig":"23"},{"size":1065,"mtime":1604602240658,"results":"35","hashOfConfig":"23"},{"size":3083,"mtime":1604124043210,"results":"36","hashOfConfig":"23"},{"size":1006,"mtime":1603970616795,"results":"37","hashOfConfig":"23"},{"size":406,"mtime":1603963469767,"results":"38","hashOfConfig":"23"},{"size":4700,"mtime":1604554917964,"results":"39","hashOfConfig":"23"},{"size":6746,"mtime":1612407127357,"results":"40","hashOfConfig":"23"},{"size":627,"mtime":1603964596688,"results":"41","hashOfConfig":"23"},{"size":362,"mtime":1603511370830,"results":"42","hashOfConfig":"23"},{"size":241,"mtime":1603511370830,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17iruu6",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\App.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\App.test.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Button.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\Cart.js",["91","92"],"import React, { Component , useEffect} from 'react';\r\nimport Title from '../Title';\r\nimport CartColumns from './CartColumns';\r\nimport EmptyCart from './EmptyCart';\r\nimport {ProductConsumer} from '../../context';\r\nimport CartList from './CartList';\r\nimport CartTotals from './CartTotals';\r\nimport form from './Form'\r\nexport default class Cart extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <ProductConsumer>\r\n                    {value =>{\r\n                        const {cart} = value;\r\n                        if(cart.length>0){\r\n                            return(\r\n                                <React.Fragment>\r\n                                   <Title name=\"your \" title=\"cart\"/>\r\n                                   <CartColumns/>\r\n                                   <CartList value ={value}/>\r\n                                   <CartTotals value ={value}/>\r\n                                </React.Fragment>\r\n                            );\r\n                        }\r\n                        else {\r\n                            return(\r\n                            <EmptyCart/>\r\n                            )\r\n                        }\r\n                    }}\r\n                </ProductConsumer>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartColumns.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartList.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\CartTotals.js",["93"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport form from './Form'\r\n\r\n\r\nexport default function CartTotals({value}) {\r\n    const {cartSubTotal,cartTax, cartTotal , clearCart} = value;\r\n    return (\r\n       <React.Fragment>\r\n           <div className=\"container\">\r\n               <div className=\"row\">\r\n                   <div className=\"col-10 mt-2 ml-sm-5 ml-md-auto col-sm-8 text-capitalize text-right\">\r\n                        <Link to=\"/\">\r\n                            <button className=\"btn btn-outline-danger text-uppercase mb-3 px-5\" type=\"button\" onClick={()=>clearCart()}>\r\n                                clear cart\r\n                            </button>\r\n                        </Link>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                subTotal :\r\n                            </span>\r\n                            <strong>Rs {cartSubTotal}</strong>\r\n                        </h5>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                Tax :\r\n                            </span>\r\n                            <strong>Rs {cartTax}</strong>\r\n                        </h5>\r\n                        <h5>\r\n                            <span className=\"text-title\">\r\n                                Total :\r\n                            </span>\r\n                            <strong>Rs {cartTotal}</strong>\r\n                        </h5>\r\n                        <Link to=\"/form\">\r\n                            <button className=\"btn btn-outline-primary text-uppercase mb-3 px-5\" type=\"button\" >\r\n                                check out\r\n                            </button>\r\n                        </Link>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </React.Fragment>\r\n    )\r\n}\r\n","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\EmptyCart.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Cart\\Form.js",["94"],"import React, { Component } from 'react'\r\nimport { Form , FormFeedback} from 'reactstrap';\r\nimport './Form.css';\r\n\r\nexport default class form extends Component {\r\n     constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                 name: '',\r\n                 email: '',\r\n                 mobile: '',\r\n                 address: '',\r\n                 city: '',\r\n                 zip: '',\r\n                 touched: {\r\n                name: false,\r\n                email: false,\r\n                mobile: false,\r\n                address: false,\r\n                 city: false,\r\n                 zip: false,\r\n            }\r\n  \r\n\r\n            }\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n            this.handleInputChange = this.handleInputChange.bind(this);\r\n            this.handleBlur = this.handleBlur.bind(this);\r\n        }\r\n        handleInputChange(event) {\r\n             const target = event.target;\r\n             const value = target.value;    \r\n             const name = target.name;\r\n             this.setState({\r\n                 [name]: value\r\n             })\r\n        }\r\n        handleSubmit(event){\r\n            console.log(\"Current state is \" + JSON.stringify(this.state))\r\n            alert(\"Current State is: \" + JSON.stringify(this.state))\r\n            event.preventDefault();\r\n        }\r\n        handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n       }\r\n    validate(name, email, mobile,address,city,zip) {\r\n        const errors = {\r\n                 name: '',\r\n                 email: '',\r\n                 mobile: '',\r\n                 address: '',\r\n                 city: '',\r\n                 zip: '',\r\n\r\n\r\n                 \r\n        };\r\n\r\n        if (this.state.touched.name && name.length === 0)\r\n            errors.name = 'This field cannot be left empty';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Enter a valid email id';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.mobile && !reg.test(mobile))\r\n        errors.mobile = 'Mobile number contains only number';\r\n\r\n         if (this.state.touched.address && address.length === 0)\r\n            errors.address = 'This field cannot be left empty';\r\n         if (this.state.touched.city && city.length === 0)\r\n            errors.city = 'This field cannot be left empty';\r\n         if (this.state.touched.zip && !reg.test(zip))\r\n        errors.zip = 'Zip contains only number';\r\n        \r\n\r\n        return errors;\r\n    }\r\n    render() {\r\n       const errors = this.validate(this.state.name, this.state.email, this.state.mobile, this.state.address,this.state.city,this.state.zip,);\r\n        return (\r\n            <div className=\"form\" style={{backgroundImage: `url(\"https://img.freepik.com/free-photo/white-wall-texture-background-backdrop-composition_1962-1027.jpg?size=626&ext=jpg&ga=GA1.2.1192447133.1603522449\")`, height:\"100%\"}}>\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <div className=\"form_container\">\r\n                    <h3>Billing Information</h3>\r\n                    <label className=\"label_class\"htmlFor=\"name\"><i class=\"fa fa-user\"></i> Full Name</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" value={this.state.name} \r\n            valid={errors.name === ''} invalid={errors.name !== ''} onBlur={this.handleBlur('name')} onChange={this.handleInputChange}></input>\r\n            <div className=\"error\">{errors.name}</div>\r\n            <br></br>\r\n            <label className=\"label_class\"htmlfor=\"email\"><i class=\"fa fa-envelope\"></i> Email</label>\r\n            <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email} valid={errors.email === ''}\r\n            invalid={errors.email !== ''} onBlur={this.handleBlur('email')} onChange={this.handleInputChange}></input>\r\n            <div className=\"error\">{errors.email}</div>\r\n            <br></br>\r\n            <label className=\"label_class\"htmlfor=\"mobile\"><i class=\"fa fa-mobile-phone\" style={{fontSize:\"22px\"}}></i> Mobile Number</label>\r\n            <input type=\"text\" id=\"mobile\" name=\"mobile\" placeholder=\"Mobile Number\" value={this.state.mobile}\r\n            valid={errors.mobile === ''} invalid={errors.mobile !== ''} onBlur={this.handleBlur('mobile')} onChange={this.handleInputChange}></input>\r\n            <div className=\"error\">{errors.mobile}</div>\r\n            <br></br>\r\n            <label className=\"label_class\"htmlfor=\"address\"><i class=\"fa fa-address-card-o\"></i> Address</label>\r\n            <input type=\"text\" id=\"address\" name=\"address\" placeholder=\"Address\" value={this.state.address}\r\n            valid={errors.address === ''} invalid={errors.address !== ''} onBlur={this.handleBlur('address')} onChange={this.handleInputChange}></input>\r\n            <div className=\"error\">{errors.address}</div>\r\n            <br></br>\r\n             <div className=\"row\">\r\n                 <div className=\"col-50\">\r\n            <label className=\"label_class\"htmlfor=\"city\"><i class=\"fa fa-institution\"></i> City</label>\r\n            <input type=\"text\" id=\"city\" name=\"city\" placeholder=\"City\" value={this.state.city}\r\n                 valid={errors.city === ''} invalid={errors.city !== ''} onBlur={this.handleBlur('city')} onChange={this.handleInputChange}></input>\r\n            <div className=\"error\">{errors.city}</div>\r\n            </div>\r\n            <div className=\"col-50\">\r\n                <label className=\"label_class\"htmlfor=\"zip\">Zip</label>\r\n                <input type=\"text\" id=\"zip\" name=\"zip\" placeholder=\"Zip\" value={this.state.zip} \r\n                 valid={errors.zip === ''} invalid={errors.zip !== ''} onBlur={this.handleBlur('zip')} onChange={this.handleInputChange}></input>\r\n            <div className=\"error\">{errors.zip}</div>\r\n            </div>\r\n            </div>\r\n                <button className=\"checkout_btn\" type=\"submit\">Continue to Checkout</button>\r\n            \r\n                </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Default.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Details.js",["95"],"import React, { Component } from 'react';\r\nimport {ProductConsumer} from '../context';\r\nimport {Link} from 'react-router-dom';\r\nimport {ButtonContainer} from './Button';\r\nimport { Button } from 'bootstrap';\r\n\r\nexport default class Details extends Component {\r\n    render() {\r\n        return (\r\n           <ProductConsumer>\r\n               {(value)=>{\r\n                  const {id,company,img,info,price,title,inCart}=\r\n                  value.detailProduct;\r\n                  return(\r\n                      <div className=\"container py-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\r\n                                <h1>{title}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-10 mx-auto col-md-6 my-3 \">\r\n                                <img src={img} className=\"img-fluid\" alt=\"product\"/>\r\n                            </div>\r\n                            <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\r\n                                <h2>\r\n                                    Dish: {title}\r\n                                </h2>\r\n                                <h4 className=\"text-title text-uppercase text-muted mt-3 mb-2\">\r\n                                    Restaurant : <span className=\"text-uppercase\">{company}</span>\r\n                                </h4>\r\n                                <h4 className=\"text-blue\">\r\n                                    <strong>\r\n                                        price: <span>Rs</span>{price}\r\n                                    </strong>\r\n                                </h4>\r\n                                <p className=\"text-capitalize font-weight-bold mt-3 mb-0\">\r\n                                    some info about the dish:\r\n                                </p>\r\n                                <p className=\"text-muted lead\">{info}</p>\r\n                                <div>\r\n                                    <Link to=\"/\" >\r\n                                        <button style={{color:\"red\",background:\"transparent\",border:\"none\",fontSize:\"1.3rem\"}}>\r\n                                            Back to Restaurant\r\n                                        </button>\r\n                                    </Link>\r\n                                    <ButtonContainer \r\n                                    disabled={inCart?true:false}\r\n                                    onClick={()=>{\r\n                                        value.addToCart(id)\r\n                                    }}\r\n                                    >\r\n                                        {inCart?'inCart': \"add to cart\"}\r\n                                    </ButtonContainer>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                  );\r\n               }}\r\n           </ProductConsumer>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Navbar.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Product.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\ProductList.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\components\\Title.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\context.js",["96"],"import React, {Component,useEffect } from 'react';\r\nimport {storeProducts,detailProduct} from './data';\r\n\r\nconst ProductContext = React.createContext();\r\n\r\n\r\nclass ProductProvider extends Component {\r\n    state ={\r\n        products:[],\r\n        detailProduct:detailProduct,\r\n        cart:[],\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0,\r\n    };\r\n\r\n   componentWillMount(){\r\n       localStorage.getItem('cart') && this.setState({\r\n           cart: JSON.parse(localStorage.getItem('cart')),\r\n           isLoading:false\r\n       })\r\n   };\r\n\r\n    componentDidMount(){\r\n        this.setProduct();\r\n    };\r\n\r\n    setProduct = () =>{\r\n        let tempProducts=[];\r\n        storeProducts.forEach(item=>{\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts,singleItem];\r\n        });\r\n        this.setState(()=>{\r\n            return { products:tempProducts }\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(nextProps,nextState){\r\n        localStorage.setItem('cart',JSON.stringify(nextState.cart))\r\n    };\r\n\r\n    getItem=(id) =>{\r\n        const product = this.state.products.find(item => item.id === id);\r\n        return product;\r\n    }\r\n\r\n    handleDetail = (id) => {\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        });\r\n    };\r\n    addToCart = (id) => {\r\n        let tempProducts =[...this.state.products];\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price= product.price;\r\n        product.total=price;\r\n\r\n        this.setState(()=>{\r\n            return {product: tempProducts,cart:[...this.state.cart,product]};\r\n        },\r\n        ()=>{\r\n            this.addTotals();\r\n        });\r\n      \r\n    };\r\n    increment=(id) => {\r\n        let tempCart =[...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item.id ===id);\r\n\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n\r\n        product.count = product.count +1;\r\n        product.total = product.count * product.price;\r\n\r\n        this.setState(()=>{return{cart:[...tempCart]}},\r\n        ()=>{this.addTotals()})\r\n\r\n    };\r\n    decrement=(id) => {\r\n        let tempCart =[...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item.id ===id);\r\n\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n\r\n        product.count=product.count-1;\r\n\r\n        if(product.count===0){\r\n            this.removeItem(id);\r\n        }\r\n        else {\r\n            product.total=product.count * product.price;\r\n             this.setState(()=>{return{cart:[...tempCart]}},\r\n            ()=>{this.addTotals()})\r\n        }\r\n    };\r\n    removeItem = (id) =>{\r\n        let tempProducts = [...this.state.products];\r\n        let tempCart = [...this.state.cart];\r\n\r\n        tempCart = tempCart.filter(item=>item.id!==id);\r\n\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart=false;\r\n        removedProduct.count=0;\r\n        removedProduct.total=0;\r\n\r\n        this.setState(()=>{\r\n            return{\r\n                cart: [...tempCart],\r\n                products : [...tempProducts],\r\n            }\r\n        },()=>{\r\n            this.addTotals();\r\n        })\r\n\r\n    };\r\n    clearCart = () =>{\r\n        this.setState(()=>{\r\n            return{cart: [] }\r\n        },()=>{\r\n            this.setProduct();\r\n            this.addTotals();\r\n        });\r\n    };\r\n    addTotals =() => {\r\n        let subTotal=0;\r\n        this.state.cart.map(item=>(subTotal += item.total));\r\n        const tempTax=subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subTotal + tax;\r\n        this.setState(()=>{\r\n            return {\r\n                cartSubTotal:subTotal,\r\n                cartTax:tax,\r\n                cartTotal:total,\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n                ...this.state,\r\n                handleDetail:this.handleDetail,\r\n                addToCart: this.addToCart,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart,\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider,ProductConsumer};","C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\data.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\index.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\reportWebVitals.js",[],"C:\\Users\\karanveer singh\\Desktop\\MINI PROJECT\\CART\\project-cart\\src\\setupTests.js",[],{"ruleId":"97","severity":1,"message":"98","line":1,"column":29,"nodeType":"99","messageId":"100","endLine":1,"endColumn":38},{"ruleId":"97","severity":1,"message":"101","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"102","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"97","severity":1,"message":"103","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":1,"column":26,"nodeType":"99","messageId":"100","endLine":1,"endColumn":35},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'form' is defined but never used.","'FormFeedback' is defined but never used.","'Button' is defined but never used."]